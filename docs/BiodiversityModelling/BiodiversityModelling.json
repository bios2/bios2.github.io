[
  {
    "path": "BiodiversityModelling/2021-08-24-bayes/",
    "title": "Intro to Bayesian Statistics",
    "description": "Material covered on Day 4.",
    "author": [
      {
        "name": "Dominique Gravel",
        "url": {}
      },
      {
        "name": "Andrew MacDonald",
        "url": {}
      }
    ],
    "date": "2021-08-28",
    "categories": [],
    "contents": "\n\nContents\nBayes slides, Tuesday\nWednesday Problem\nGenerative (multilevel) models\nField data project\nMixed effect model\n\nBayes slides, Tuesday\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\n\nWednesday Problem\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\n\nGenerative (multilevel) models\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\n\nField data project\nTry to find a conjugate prior for part of your data. If you have a two-parameter distribution (e.g.¬†the Normal distribution) you may only be able to use a conjugate prior for one parameter.\nEstimate your distribution parameters with this approach. Do you get a similar response to previously?\nMixed effect model\n\\[\n\\begin{align}\ny &\\sim \\text{Normal}(\\mu, \\sigma_y) \\\\\n\\mu &= \\beta_0 + \\beta_1 x + \\alpha_{block} \\\\\n\\alpha_{block} &\\sim \\text{Normal}(0, \\sigma_{block}) \\\\\n\\sigma_y &\\sim \\text{Exponential}(2) \\\\\n\\sigma_{block} &\\sim  \\text{Exponential}(4) \\\\\n\\beta_0 &\\sim \\text{Normal}(7, 0.2) \\\\\n\\beta_1 &\\sim \\text{Normal}(4, 0.5)\n\\end{align}\n\\]\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-25T16:05:53-04:00",
    "input_file": {}
  },
  {
    "path": "BiodiversityModelling/01_probabilities/",
    "title": "Probability for Ecologists",
    "description": "Material covered on Day 1.",
    "author": [
      {
        "name": "Dominique Gravel",
        "url": {}
      },
      {
        "name": "Andrew MacDonald",
        "url": {}
      }
    ],
    "date": "2021-08-16",
    "categories": [],
    "contents": "\n\nContents\nIntroduction to probability\nDefinitions\nRules of probability\nProblems\nSolutions\nUnivariate Distributions\nStatistical field work ‚Äì collecting a wild distribution!\nContinuous distributions\nDiscrete distributions\n\n\nIntroduction to probability\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\nClick to view full screen\n\nDefinitions\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\nClick to view full screen\n\nRules of probability\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\nClick to view full screen\n\nProblems\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\nClick to view full screen\n\nSolutions\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\nClick to view full screen\n\nUnivariate Distributions\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\nClick to view full screen\n\nStatistical field work ‚Äì collecting a wild distribution!\nStep 1. Think of a way you can collect some numbers. These should be numbers that can collect yourself ‚Äì no simulation, and no data from the internet! Things like the weights of shoes in your house, people on a train car, time between shots on goal in a hockey game. Choose something you like, and which you can measure in a relatively brief period of time.\nStep 2. Think about the kind of statistical distribution that might represent this phenomenon! Write it down. Why does this distribution seem to match your data? is it constrained in some way?\nStep 3. Collect some observations ‚Äì aim for a good number, at least 15 or so.\nStep 4. Type in these data and visualize them. Do they match your hypothesized distribution? How do you know?\nContinuous distributions\ndistribution\npositive or negative?\nQuick description\nNormal\npositive or negative values\nCan result from many small effects added together\nLornormal\npositive values only\nresults from many things multiplied together\nGamma\npositive values only\ncan be the time to wait for a given number of things to happen\nExponential\nPositive only\nLengths of time between random events\nBeta\nPositive only\nBetween 0 and 1. Can be any proportion.\nDiscrete distributions\ndistribution\npositive or negative?\nQuick description\nPoisson\nPositive\nCounting things that occur randomly over time\nNegative Binomial\nPositive\nCounts of things as in the Poisson, but more variable. Also: the number of trials till a certain number of successes.\nBinomial\nPositive\nNumber of ‚Äúsuccesses‚Äù out of a number of trials, when probability of success is always the same\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-18T12:40:33-04:00",
    "input_file": {}
  },
  {
    "path": "BiodiversityModelling/02_likelihood/",
    "title": "Likelihood",
    "description": "Material covered on Day 2.",
    "author": [
      {
        "name": "Dominique Gravel",
        "url": {}
      },
      {
        "name": "Andrew MacDonald",
        "url": {}
      }
    ],
    "date": "2021-08-16",
    "categories": [],
    "contents": "\n\nContents\nIntroduction to likelihood\nSutton trees\nStatistical field work ‚Äì exploring your dataset\nContinuous distributions\nDiscrete distributions\n\nMaximum Likelihood Workout üí™üí™üí™üí™\nOne parameter\nOne-parameter exponential distribution\nMonarch Butterfly numbers\nDifference between two normal distributions (part I)\nDifference between two normal distributions part (II)\n\nTwo parameters\n\n\nIntroduction to likelihood\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\nClick to view full screen\n\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\nClick to view full screen\n\nGet the habitat type data here:\n\n\nstates <- readr::read_delim(\"https://raw.githubusercontent.com/bios2/bios2.github.io/master/_BiodiversityModelling/02_likelihood/03-problem/data/transitions.txt\", delim = \" \", col_names = c(\"x\",\"ID\", \"temp\", \"state1\", \"state2\", \"interval\"), skip = 1)\n\nknitr::kable(head(states))\n\n\nx\nID\ntemp\nstate1\nstate2\ninterval\n1\n685303\n3.609000\nB\nB\n9\n2\n685016\n4.701333\nM\nM\n7\n3\n685241\n4.701333\nB\nB\n7\n4\n685334\n4.701333\nM\nM\n7\n5\n685364\n4.701333\nB\nB\n7\n6\n685415\n4.701333\nB\nB\n7\n\nSutton trees\n\n\nmaple <- readr::read_csv2(\"https://raw.githubusercontent.com/bios2/bios2.github.io/master/_BiodiversityModelling/02_likelihood/01-likelihood/data/sutton.csv\")\n\nknitr::kable(head(maple))\n\n\nx\ny\nabba\nacpe\nacsa\nbeal\nbepa\nfagr\npiru\n0\n0\n1\n55\n11\n7\n0\n92\n0\n0\n100\n0\n5\n4\n3\n0\n6\n0\n0\n120\n2\n7\n12\n4\n1\n7\n0\n0\n140\n4\n5\n4\n8\n1\n2\n1\n0\n160\n2\n2\n11\n8\n1\n6\n1\n0\n180\n5\n3\n9\n7\n0\n3\n1\n\nStatistical field work ‚Äì exploring your dataset\nStep 1. Return to your hypothesized distribution. Find its random number generation function (e.g.¬†rbinom() for the Binomial Distribution). Experiment with different parameters values to create data that looks close to your own data.\nStep 2. Attempt to fit the same parameters by Maximum likelihood. If you distribution has two parameters, fix one and find the Maximum Likelihood value of the other. Stretch goal Try to fit both of them at once.\nStep 3. Look at the help for ?MASS::fitdistr(). Try to use it to find your distribution parameters.\nContinuous distributions\ndistribution\npositive or negative?\nQuick description\nNormal\npositive or negative values\nCan result from many small effects added together\nLornormal\npositive values only\nresults from many things multiplied together\nGamma\npositive values only\ncan be the time to wait for a given number of things to happen\nExponential\nPositive only\nLengths of time between random events\nBeta\nPositive only\nBetween 0 and 1. Can be any proportion.\nDiscrete distributions\ndistribution\npositive or negative?\nQuick description\nPoisson\nPositive\nCounting things that occur randomly over time\nNegative Binomial\nPositive\nCounts of things as in the Poisson, but more variable. Also: the number of trials till a certain number of successes.\nBinomial\nPositive\nNumber of ‚Äúsuccesses‚Äù out of a number of trials, when probability of success is always the same\nMaximum Likelihood Workout üí™üí™üí™üí™\n\n\n\nHere are some suggested ideas for how to work out your likelihood skills!\nThey are divided into three sections: one, two and three parameters.\nNOTE remember to consult the slides above for a step-by-step pseudocode approach\nTo do an exercise:  copy and paste the R code into an R source file. Run it, then work with the data.frame it creates!\nOne parameter\nOne-parameter exponential distribution\nYou are watching a female bird visiting her nest, bringing back food for nestlings. Every time she comes back you write down the number of minutes since the last visit. You watch for 20 consecutive visits. This species brings food once every 10 minutes, so six times an hour, and visits are prefectly random. This implies an Exponential distribution with a rate of \\(6\\text{visits} / 60\\text{minutes}\\) so in other words \\(0.1\\) visits per minute. Use maximum likelihood to confirm this number\n\n\nvisit_rate <- 6/60\nset.seed(1859)\ntime_between_visit <- rexp(20, rate = visit_rate)\nbird_visits <- data.frame(times = time_between_visit)\n\nhist(time_between_visit)\n\n\n\n\nQuestions / thoughts:\nBegin by trying only positive numbers in your algorithm.\nRun the the following rexp(1, -1). What happens? Why?\nHow would you constrain your algorithm to use only positive numbers?\nMonarch Butterfly numbers\nYou are concerned about Monarchs, so you‚Äôve decided to count their eggs! You look on 50 milkweed plants in your neighbourhood to find them. The eggs follow a perfect Poisson distribution with a mean of 120 eggs per plant.\n\n\nmean_eggs <- 120\nset.seed(1859)\ncounted_eggs <- rpois(50, mean_eggs)\negg_data <- data.frame(counted_eggs)\n\nhist(counted_eggs)\n\n\n\n\nYou want to use Maximum Likelihood to look at this distribution. You want to be extra careful, so you want to do it two ways.\nFirst, you try to fit a Poisson distribution like this:\n\\[\n\\text{eggs} \\sim \\text{Poisson}(\\lambda)\n\\]\nyou do this by searching over values of lambda between 1 and 200\nLambda can‚Äôt be 0 or negative. You decide to replace the value of \\(\\lambda\\) with a function that is always greater than 0:\n\\[\nf(x) = e^x\n\\]\n\n\ncurve(exp(x), xlim = c(-3, 3))\n\n\n\n\nSince this function is always positive, and \\(\\lambda\\) is always positive, you decide to put the function in for the \\(\\lambda\\) of the Poisson:\n\\[\n\\text{eggs} \\sim \\text{Poisson}(e^x)\n\\]\nQuestions:\nNow what values should you use for \\(x\\) ?\nAre your answers from the two methods the same?\nDifference between two normal distributions (part I)\nYou add some fertilizer to plants, because experiments. This makes the plants grow more on average, because physiology. At the end of your experiment, you cut all the plants down and measure their dry biomass, because tradition.\nAs a skilled botanist, you know that the standard deviation of the control plots will be exactly 5g, and the standard deviation of the treatment plants will be *exactly the same. You know that plants are on average 200g, and the fertilizer should increase this by 30g (a 15% increase).\n\n\nreal_difference <- 30\nset.seed(1859)\ncontrol_plants <- rnorm(300, mean = 200, sd = 5)\n\ntreated_plants <- rnorm(300, mean = 200 + real_difference, sd = 5)\n\nplant_growth <- rbind(\n  data.frame(treatment = 0, mass = control_plants),\n  data.frame(treatment = 1, mass = treated_plants)\n)\n\npar(mfrow = c(2,1))\nhist(control_plants, breaks = 15)\nhist(treated_plants, breaks = 15)\n\n\n\npar(mfrow = c(1,1))\n\n\n\nQuestions\nWhat is the likelihood for the observations? Consider that you know the control mean (\\(\\mu\\)), the standard deviation (\\(\\sigma\\)). What is missing? Call this missing quantity \\(\\alpha\\).\nUse maximum likelihood to confirm that the difference is really 30g\nDifference between two normal distributions part (II)\nThe fertilizer makes plants grow, but affects different plants differently, because genetics.\nAs a VERY skilled geneticist, you know that the standard deviation of the control plots will be exactly 5g, but now you also know the standard deviation of the treatment plants will be exactly 9g. You know that plants are on average 200g, and the fertilizer should increase this by 30g (a 15% increase).\n\n\nreal_difference <- 30\nset.seed(1859)\ncontrol_plants2 <- rnorm(300, mean = 200, sd = 5)\n\ntreated_plants2 <- rnorm(300, mean = 200 + real_difference, sd = 9)\n\nplant_growth2 <- rbind(\n  data.frame(treatment = 0, mass = control_plants),\n  data.frame(treatment = 1, mass = treated_plants)\n)\n\npar(mfrow = c(2,1))\nhist(control_plants2, breaks = 15)\nhist(treated_plants2, breaks = 15)\n\n\n\npar(mfrow = c(1,1))\n\n\n\nQuestions\nWhat is the likelihood for the observations? Consider that you know the control mean (\\(\\mu\\)), the control standard deviation (\\(\\sigma_c\\)) and the treatment standard deviation (\\(\\sigma_t\\)). How is this different from the first equation?\nUse maximum likelihood to confirm that the difference is really 30g\nIs the likelihood profile different from the first exercise? that is, does the plot of likelihood values (y axis) against parameter values (x axis) look the same?\nTwo parameters\nThe following two examples are lifted from Bolker , page 182\nConsider some tadpoles, who live a difficult life. They are in an experiment where they are kept at different densities. The experimenter introduces a predator to the container with the tadpoles, and observes as the predator kills tadpoles.\nThe experiment has six treatments: 5, 10, 15, 20, 25, 30 tadpoles per tank, and 5 tanks per treatment.\nPredators can feed more when prey density is higher, but sometimes slow down when the prey get to very high densities. In a classic Type II functional response, this is modelled with two numbers. First, a predator species has some constant attack rate \\(a\\) ‚Äì they only need to eat so much per unit time. Second, they must ‚Äúhandle‚Äù each prey item (kill, digest, etc) before attacking another. This handling time creates the slowdown in attack: no matter how many prey there are, they still take the same effort to catch, kill, and digest.\nThe Type II functional response is written as:\n\\[\nf(N) = \\frac{a}{a + ahN}\n\\]\n\\(a\\) is the attack rate\n\\(h\\) is handling time\n\\(N\\) is the number of prey\nThis equation produces a per capita rate of predation: the proportion of prey killed by one predator in a unit of time.\nPlay with this equation in R, using curve(), and modify values of a and h.\n\n\na <- 0.7\nh <- 1.3\ncurve(a/(1 + a*h*x), xlim = c(0,30), ylim = c(0,1))\n\n\n\n\nConvince yourself that the output is always between 0 and 1. Are there any constraints on the parameters? Think about how you will handle that in your Maximum Likelihood search.\nAt the end of the experiment, the scientist comes back and measures how many tadpoles were killed in each treatment, out of the total number originally placed in that tank. What probability distribution would you use for these data? Where do you place the functional response equation explored above?\nPart 2\nSimulate some data with known parameters for \\(a = 0.6\\) and \\(h = 0.3\\)\n\n\na <- 0.7\nh <- 1.3\nrbinom(5,prob =  a/(1 + a*h*10), size = 10)\n\n\n[1] 1 0 1 2 1\n\n(to be continued!)\n\n\n\n",
    "preview": "BiodiversityModelling/02_likelihood/day-2_files/figure-html5/bird-visits-1.png",
    "last_modified": "2021-08-20T13:26:11-04:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "BiodiversityModelling/03_optimization/",
    "title": "Optimization",
    "description": "Material covered on Day 3 of lectures.",
    "author": [
      {
        "name": "Dominique Gravel",
        "url": {}
      },
      {
        "name": "Andrew MacDonald",
        "url": {}
      }
    ],
    "date": "2021-08-16",
    "categories": [],
    "contents": "\n\nContents\nIntroduction to optimization\nCode for the Simulated Annealing Algorithm\nDom‚Äôs Solution\n\nAndrew‚Äôs Approach\n\nIntroduction to optimization\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\nClick to view full screen\n\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\nClick to view full screen\n\nCode for the Simulated Annealing Algorithm\nDom‚Äôs Solution\n\n\n# Load the data \ndata <- read.table(\"https://raw.githubusercontent.com/bios2/bios2.github.io/master/_BiodiversityModelling/01_probabilities/01-introduction/data/hemlock.txt\", header = TRUE)\nobs = data[,2]\nL = data[,1]\n\n# Likelihood function\nh <- function(obs, L, pars) {\n    a <- pars[1]\n    s <- pars[2]\n    sigma <- pars[3]\n    mu <- a*L/(a/s + L)\n    sum(log(dnorm(obs, mu, sigma)))\n}\n\n# Candidate function\nc_x <- function(pars_lo, pars_hi) runif(1, pars_lo, pars_hi)\n\n# Set conditions for the simulated annealing sequence\nT_fn <- function(T0, alpha, step) T0*exp(alpha*step)\n\nT0 <- 10\nalpha = -0.001\nnsteps <- 10000\n\n# Prepare an object to store the result\nres <- matrix(nr = nsteps, nc = 5)\n\n# Initiate the algorithm\na0 <- 1\ns0 <- 1000\nsd0 <- 10\npars0 <- c(1, 100, 10)\npars_lo <- c(0, 1, 1)\npars_hi <- c(1000, 1000, 100)\n\n# Main loop\nfor(step in 1:nsteps) {\n\n    for(j in 1:3) {\n\n        # Draw new value for parameter j\n        pars1 <- pars0\n        pars1[j] <- c_x(pars_lo[j], pars_hi[j])\n\n        # Evaluate the function\n        h1 <- h(obs, L, pars1)\n        h0 <- h(obs, L, pars0)\n\n        # Compute the difference\n        diff <- h1 - h0\n\n        # Accept if improvement\n        if(diff > 0) pars0 <- pars1\n\n        # Accept wrong candidates \n        else {  \n            p <- exp(diff/T_fn(T0, alpha, step))\n            if(runif(1)<p) pars0 <- pars1\n        }\n    }\n    \n    # Record values\n    res[step,] <- c(step,pars0,h(obs,L,pars0)) \n}\n\n#Plot the results\nplot(c(1:nsteps), res[,5], type = \"l\", xlab = \"Time step\", ylab = \"h(x)\",cex = 2, log = \"x\")\n\n\n\nplot(L, obs, cex = 2, xlab=\"Light\", ylab = \"Growth\", cex.axis = 2, cex.lab = 2)\n\nadd_model<- function(step) {\n    Lseq = seq(0,100,0.1)\n    a=res[step,2]\n    s=res[step,3]\n    lines(Lseq,a*Lseq/(a/s+Lseq), lwd = 2)\n}\nadd_model(2)\nadd_model(10)\nadd_model(100)\nadd_model(500)\nadd_model(1000)\n\n\n\n\nAndrew‚Äôs Approach\nDEFINE function to optimize h(X)\n\n\nfake_xs <- rnorm(42, 19, 4)\n\nloglike_numbers <- function(numbers, mu) sum(dnorm(x = numbers, mean = mu, sd = 4, log = TRUE))\n\n\nloglike_numbers(fake_xs, 7)\n\n\n[1] -310.383\n\nlibrary(tidyverse)\n\ntibble(possible_mus = -3:30) %>% \n  mutate(ll = map_dbl(possible_mus, loglike_numbers, numbers = fake_xs)) %>% \n  ggplot(aes(x = possible_mus, y = ll)) + geom_point() + \n  geom_vline(xintercept = 19)\n\n\n\n\nDEFINE the sampling function c(X)\n\n\nsee_of_x <- function(x, sigma = 1) { x + rnorm(1, sd = sigma) }\n\nxx <- numeric(40)\nxx[1] <- 30\n\n## walk like a drunk: test my see of x function\nfor(i in 2:40){\n  xx[i] <- see_of_x(xx[i-1], sigma = .001)\n}\n\nplot(xx, type = \"l\")\n\n\n\n\nDEFINE temperature sequence\n\n\ntemp_line <- function(runs, tstart, tcool){\n  exp(log(tstart) + log(tcool)*0:(runs-1))\n}\n\ntemp_line_str <- function(runs, tstart) {\n  seq(tstart, 0, length.out = runs)\n}\n\ntibble(time = 1:300,\n       temp = temp_line(300, 8, 0.9)) %>% \n  ggplot(aes(x = time, y = temp)) + \n  geom_point()\n\n\n\ntibble(time = 1:300,\n       prob = exp(-13/temp_line(300, 70, 0.97))) %>% \n  ggplot(aes(x = time, y = prob)) + \n  geom_point()\n\n\n\n\n    REPEAT\n        DRAW sample X from c(x)\n        COMPUTE difference diff = h(X) - h(X_0)\n        IF diff > 0 ACCEPT X\n        ELSE \n            COMPUTE acceptance probability p = exp(diff/T)\n            DRAW value P from random uniform on (0,1)\n            IF P < p\n                ACCEPT X\n            ELSE\n                REJECT X\n        UPDATE temperature\n    UNTIL nsteps is reached\n\n\n# function to take temperature, diff, and give back TRUE or FALSE (will a negative be kept)\n\nkeep_neg_diff <- function(diff, Tmp){\n  stopifnot(diff<0)\n  runif(1, min = 0, max = 1) < exp(diff/Tmp)\n}\n\nkeep_neg_diff(-30, Tmp = 40)\n\n\n[1] FALSE\n\nkeep_neg_diff(10, Tmp = 0)\n\n\nError in keep_neg_diff(10, Tmp = 0): diff < 0 is not TRUE\n\n\n\n## function to take x0 and x1 and a function and temp and return either x0 (reject) or x1 ( accept)\nkeep_or_reject <- function(x0, x1, fun, temp){\n  diff <- fun(x1) - fun(x0)\n  # browser()\n  if (diff > 0) {\n    return(x1)\n  } else if (keep_neg_diff(diff, Tmp = temp)){\n    return(x1)\n  } else {\n    return(x0)\n  }\n}\n\n\n\n\n\n# evaluate for these only\n\nll_fakenums_f_x <- function(x) loglike_numbers(fake_xs, mu = x)\n\n# make temperatures\nruns <- 299\n\ntemps <- temp_line(runs, 3, 0.98)\n\nxx <- numeric(runs + 1)\n\nstartval <- 10\n\n\nxx[1] <- startval\n\n\nfor (i in 2:runs){\n  maybe <- see_of_x(xx[i-1])\n  xx[i] <- keep_or_reject(x0 = xx[i-1], x1 = maybe, fun = ll_fakenums_f_x, temp = temps[i-1])\n}\n\nplot(xx, type = \"l\")\n\n\n\n\n\n\n\n",
    "preview": "BiodiversityModelling/03_optimization/day-3_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2021-08-20T17:38:58-04:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  }
]
