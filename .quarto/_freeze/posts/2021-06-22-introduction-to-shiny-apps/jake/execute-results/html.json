{
  "hash": "6f30962f547c615c0d30befc672f6ed0",
  "result": {
    "markdown": "---\noutput: html_document\neditor_options: \n  chunk_output_type: inline\n---\n\n\n\n\n# Constructing an App\n\n## Taking advantage of good defaults\n\nHere, we will use shiny extension `shinyDashboards` and `leaflet` to construct a custom Shiny App to map volcanoes of the world. First, we need a few additional packages.\n\n**Note: All Source code for this app can be found [here](https://github.com/bios2/shiny_day_2/tree/main/Jake_volcano_map/Volcano_Leaflet) on the BIOS2 Github.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(shiny)\nlibrary(shinydashboard)  # dashboard layout package\nlibrary(shinyWidgets)  # fancy widgets package\nlibrary(leaflet)  # interactive maps package\nlibrary(dplyr)\nlibrary(ggplot2)\n```\n:::\n\n\n### Using ShinyDashboard\n\nWe will create our app using defaults from the ShinyDashboard package, which always includes three main components: a header, using `dashboardHeader()`, a sidebar, using `dashboardSidebar()`, and a body, using `dashboardBody()`. These are then added together using the `dashboardPage()` function.\n\nBuilding these elements is less like usual R coding, and more like web design, since we are, in fact, designing a unser interface for a web app. Here, we'll make a basic layout before populating it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create the header of our app\nheader <- dashboardHeader(\n    title = \"Exploring Volcanoes of the World\",\n    titleWidth = 350 # since we have a long title, we need to extend width element in pixels\n)\n\n\n# create dashboard body - this is the major UI element\nbody <- dashboardBody(\n\n    # make first row of elements (actually, this will be the only row)\n    fluidRow(\n        \n        # make first column, 25% of page - width = 3 of 12 columns\n        column(width = 3,\n               \n               \n               # Box 1: text explaining what this app is\n               #-----------------------------------------------\n               box( width = NULL,\n                    status=\"primary\", # this line can change the automatic color of the box.\n                    title = NULL,\n                    p(\"here, we'll include some info about this app\")\n\n                 \n               ), # end box 1\n               \n               \n               # box 2 : input for selecting volcano type\n               #-----------------------------------------------\n               box(width = NULL, status = \"primary\",\n                   title  = \"Selection Criteria\", solidHeader = T, \n                   \n                   p(\"here, we'll add a UI element for selecting volcano types\"),\n\n               ), # end box 2\n               \n               \n               \n               # box 3: ggplot of selected volcanoes by continent\n               #------------------------------------------------\n               box(width = NULL, status = \"primary\",\n                   solidHeader = TRUE, collapsible = T,\n                   title = \"Volcanoes by Continent\",\n                   p(\"here, we'll add a bar plot of volcanoes in each continent\")\n               ) # end box 3\n               \n        ), # end column 1\n         \n        # second column - 75% of page (9 of 12 columns)\n        #--------------------------------------------------\n        column(width = 9,\n               # Box 4: leaflet map\n               box(width = NULL, background = \"light-blue\", height = 850,\n                   p(\"here, we'll show volcanoes on a map\"),\n               ) # end box with map\n        ) # end second column\n        \n    ) # end fluidrow\n) # end body\n\n\n# add elements together\ndashboardPage(\n    skin = \"blue\",\n    header = header,\n    sidebar = dashboardSidebar(disable = TRUE), # here, we only have one tab of our app, so we don't need a sidebar\n    body = body\n)\n```\n:::\n\n\n![](images/shiny_dashboard_layout.png)\n\n\n## Populating the Layout \n\nNow, we are going to fill out app with elements. In this app, we will only have one user input: a selection of the volcano type to show. We will use this input (`input$volcano_type`), which will be used to filter data in the server (i.e. make a smaller dataset using only volcanoes of the selected types), then use this filtered dataset to create output elements (plots and maps). \n\nBelow, we show the necessary code to include in both the UI and the Server to create each plot element. Notice that after the reactive value `selected_volcanoes` is created in the selection box, this is the only object that is used to create the other elements in the app. \n\n\n|Location   |Element   | UI   |Server  |\n|:--- |:----|:--------|:--------|\n| Box 1  |  **Intro Textbox**      |  Markdown/HTML text  code   |        | \n| Box 2  |  **Selection Wigets**   |  `checkboxGroupButtons(` `inputID = \"volcano_type\")` | `selected_volcanoes <- reactive({` `volcano_df %>% filter(type %in% input$volcano_type)})` to create a filtered dataset that will react to user input |\n| Box 3  |  **Bar Graph**          |  `plotOutput(\"continentplot\")` |   `output$continentplot <- renderPlot(...))` which will plot from the `selectied_volcanoes` reactive object |\n| Box 4  |  **Leaflet Map**        |  `leafletOutput(\"volcanomap\")` | ` output$volcanomap <- renderLeaflet(...)` to map points from the `selectied_volcanoes` reactive object | \n\n\n![](images/populated_shiny.png)\n\n\n\n## Challenge!\n\nUse the code provided to add your own additional user input to the Shiny App. The code (which you can access [here](https://github.com/bios2/shiny_day_2/tree/main/Jake_volcano_map/Volcano_Leaflet) leaves a space for an additional UI input inside box 2). Then, you'll need to use your new input element to the reactive value in the Server, as noted in the server code. \n\nUse the [Default Shiny Widgets](https://shiny.rstudio.com/gallery/widget-gallery.html) or [shinyWidgets extended package](http://shinyapps.dreamrs.fr/shinyWidgets/) galleries to explore the types of elements you can add. \n\n\n![](images/add_elements_diagram.png)\n\n\n## See our completed app [HERE](https://jakelawlor.shinyapps.io/Volcanoes_of_the_World/)\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}